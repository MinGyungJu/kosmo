-- 회원 테이블
CREATE TABLE EX_MEMBER
(
ID VARCHAR2(10), -- 아이디
PASS VARCHAR2(10), -- 패스워드
NAME VARCHAR2(20), -- 이름
TEL VARCHAR2(20), -- 전화번호
ADDR VARCHAR2(100) -- 주소
);

-- 상품 테이블
CREATE TABLE EX_GOOD
(
GNO VARCHAR2(10), -- 상품번호
GNAME VARCHAR(30), -- 상품명
GDETAIL VARCHAR2(300), -- 상세설명
PRICE NUMBER    -- 가격
); 

-- 주문 테이블
CREATE TABLE EX_ORDER 
(
ONO NUMBER, -- 번호
ORDERNO VARCHAR2(20), -- 주문번호
GNO VARCHAR2(10), -- 상품번호
ID VARCHAR2(10), -- 회원 아이디
COUNT NUMBER, -- 갯수
STATUS VARCHAR2(10) -- 배송상태
);
-- ######################################################
-- 주문테이블과 회원테이블, 상품테이블의 관계를 맺는다면?
ALTER  TABLE   EX_MEMBER
ADD  CONSTRAINT  PK_ID  PRIMARY  KEY ( ID );


ALTER  TABLE   EX_MEMBER 
DROP  CONSTRAINT   PK_TEL ;

ALTER  TABLE   EX_GOOD
ADD  CONSTRAINT  PK_GNO  PRIMARY  KEY ( GNO );
ALTER  TABLE   EX_GOOD 
DROP  CONSTRAINT   PK_GNO ;
ALTER  TABLE   EX_GOOD
ADD  CONSTRAINT  PK_GNO  PRIMARY  KEY ( GNO );

ALTER  TABLE   EX_ORDER 
ADD  CONSTRAINT  PK_ONO  PRIMARY  KEY ( ONO );
ALTER  TABLE   EX_ORDER
DROP  CONSTRAINT   PK_ONO ;

ALTER  TABLE   EX_ORDER 
ADD  CONSTRAINT  PK_GNO  PRIMARY  KEY ( GNO );

ALTER  TABLE   EX_ORDER
ADD  CONSTRAINT  fk_ID  FOREIGN  KEY ( ID )
REFERENCES  EX_MEMBER ( ID );
DESC EX_GOOD;

ALTER  TABLE   EX_ORDER
ADD  CONSTRAINT  fk_GNO  FOREIGN  KEY ( GNO )
REFERENCES  EX_GOOD ( GNO );
-----------------------------------------------------------------------
insert into ex_member(id, pass, name, tel, addr )

values('kim', '1111', '김길동', '02-222-2222','서울 멋지구 이쁜동');

?

insert into ex_member(id, pass, name, tel, addr )

values('park', '1111', '박길동', '03-333-3333','인천 멋지구 이쁜동');

?

insert into ex_member(id, pass, name, tel, addr )

values('meng', '1111', '맹길동', '04-444-4444','경기 멋지구 이쁜동');

?

commit;
----------------------------------------------------------------
insert into ex_good( gno, gname, gdetail, price )

values('1001', '머리끈', '아주 비싼 머리끈', 200 );

?

?

insert into ex_good( gno, gname, gdetail, price )

values('2002', '자전거-A', '비싸지만 빠르게 달리는 자전거', 10000 );

?

insert into ex_good( gno, gname, gdetail, price )

values('2010', '자전거-B', '아주 비싸지만 느리고 안전하게 달린다는 자전거', 20000 );

?

insert into ex_good( gno, gname, gdetail, price )

values('3333', '핸드폰케이스', '싸고 유행하는 핸드폰 케이스', 1500 );

?

commit;
---------------------------------------------------------------------
-- 주문 테이블 데이타 검색

?

insert into ex_order( ono, orderno, gno, id, count, status )
values( 1, '20161212', '1001', 'park', 1, '배송완료');
DESC EX_ORDER;
--PARK은 3글자 -> 12먹는데 ID는 10칸으로 지정
?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 2, '20161212', '2010', 'park', 1, '배송중');

?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 3, '20161111', '1001', 'kim', 2, '주문');

?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 4, '20161111', '3333', 'kim', 3, '주문');

?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 5, '20163333', '1001', 'park', 3, '주문');

?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 6, '20163333', '2010', 'park', 1, '배송중');

?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 7, '20163333', '2002', 'park', 2, '주문');

?

insert into ex_order( ono, orderno, gno, id, count, status )

values( 8, '20165050', '1001', 'meng', 1, '배송중');

?

commit;
--1. 배송중인 상품에 대한 내용을 출력
SELECT *
FROM EX_ORDER
WHERE STATUS = '배송중';

--2. 주문 들어온 상품 내역과 고객 정보 출력
SELECT G.GNAME, M.*
FROM EX_ORDER O LEFT OUTER JOIN EX_MEMBER M
                     ON O.ID = M.ID
                LEFT OUTER JOIN EX_GOOD G
                     ON O.GNO = G.GNO
WHERE O.STATUS = '주문';


--3. 주문별로 고객 정보(아이디)와 주문한 상품의 총금액을 출력
SELECT O.ID, SUM(G.PRICE*O.COUNT)
FROM EX_GOOD G INNER JOIN EX_ORDER O
                ON G.GNO = O.GNO
GROUP BY O.ORDERNO, O.ID;

