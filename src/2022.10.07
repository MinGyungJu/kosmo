--복습
--11. scott 또는 ward와 월급이 같은 사원의 정보를 이름, 업무, 급여를 출력
SELECT ENAME, JOB, SAL
FROM EMP
WHERE SAL =(SELECT SAL FROM EMP WHERE ENAME = 'SCOTT')
OR SAL = (SELECT SAL FROM EMP WHERE ENAME = 'WARD');

SELECT ENAME, JOB, SAL
FROM EMP
WHERE SAL IN (SELECT SAL FROM EMP WHERE ENAME IN ('SCOTT', 'WARD'));

--12. chicago에서 근무하는 사원과 같은 업무를 하는 사원의 이름, 업무를 출력
SELECT ENAME, JOB
FROM EMP 
WHERE JOB IN (SELECT E.JOB FROM EMP E INNER JOIN DEPT D ON E.DEPTNO = D.DEPTNO WHERE D.LOC LIKE 'CHICAGO'); 

SELECT ENAME, JOB
FROM EMP
WHERE JOB IN ( SELECT E.JOB FROM EMP E INNER JOIN DEPT D
                                       ON E.DEPTNO = D.DEPTNO
                                       WHERE LOWER(D.LOC) = 'chicago' );
?
--13. 부서별로 월급이 평균 월급보다 높은 사원을 부서번호, 이름, 급여를 출력
SELECT DEPTNO, ENAME, SAL
FROM EMP
WHERE SAL > (SELECT AVG(SAL) FROM EMP GROUP BY DEPTNO)
GROUP BY DEPTNO;

SELECT E1.DEPTNO, E1.ENAME, E1.SAL
FROM EMP E1,(SELECT DEPTNO,TRUNC(AVG(SAL)) AVG FROM EMP GROUP BY DEPTNO) E
WHERE E1.DEPTNO=E.DEPTNO
AND E1.SAL> E.AVG;

-- 뷰(가상테이블)
CREATE OR REPLACE VIEW v_emp  AS
         select empno, ename, deptno from emp;
    
SELECT * FROM v_EMP;
DESC v_EMP;
SELECT * FROM EMP;

INSERT INTO V_EMP VALUES (1000, '홍길동', 20);
--(가상테이블에 추가 입력 가능), 원본테이블에도 입력이 자동으로 됨

INSERT INTO V_EMP VALUES (1000, '홍홍이', 20);  -- 원래조건의 PK조건에 걸림
INSERT INTO V_EMP VALUES (2000, '홍홍이', 90);  -- 원본의 FK에 걸림, 90 DEPT넘버 존재하지않음

CREATE OR REPLACE VIEW v_emp  AS
         select empno, ename, deptno from emp
         WITH READ ONLY;
         --WITH READ ONLY = 읽기전용 가상테이블
INSERT INTO V_EMP VALUES (1000, '홍길동', 20); -- 읽기 전용이라 입력 불가
/*
[ 연습 ] EMP 테이블에서 30번 부서만 
EMPNO를 EMP_NO로 ENAME을 NAME로 SAL를 SALARY로 바꿔서 
EMP_30 뷰를 생성하시오
*/
CREATE OR REPLACE VIEW V_EMP_30  AS
        SELECT EMPNO AS EMP_NO, ENAME AS NAME, SAL AS SALARY FROM EMP WHERE DEPTNO = 30 
        WITH READ ONLY;
        
SELECT * FROM v_EMP_30;

--복합뷰
CREATE OR REPLACE VIEW V_EMP_INFO AS
SELECT E.EMPNO EMPNO, E.ENAME ENAME, D.DNAME DNAME 
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO;

SELECT * FROM v_EMP_INFO;
SELECT * FROM EMP;
-- 뷰는 우리가 안씀 

INSERT INTO V_EMP_INFO(EMPNO, ENAME, DNAME) VALUES(3333, '맹꽁이', 30);
INSERT INTO V_EMP_INFO(EMPNO, ENAME) VALUES(3333, '맹꽁이');

DELETE FROM V_EMP_INFO WHERE EMPNO = 7788; 

--[ 연습 ] 부서별로 부서명, 최소급여, 최대 급여, 부서의 평균 급여를 포함하는 V_DEPT_SUM 뷰를 생성하여라.
CREATE OR REPLACE VIEW V_DEPT_SUM AS
SELECT D.DNAME, MIN(E.SAL) MIN, MAX(E.SAL) MAX, AVG(E.SAL) AVG
FROM DEPT D INNER JOIN EMP E
ON D.DEPTNO = E.DEPTNO
GROUP BY D.DNAME
WITH READ ONLY;
-- RESEARCH  1000 5000  3000
INSERT INTO EMP(EMPNO, ENAME, SAL, DEPTNO)
VALUES(4444, '호이', 9900, 20);

SELECT*FROM EMP;

SELECT*FROM V_DEPT_SUM;

--시퀀스
CREATE  SEQUENCE  SEQ_TEMP;
SELECT SEQ_TEMP.NEXTVAL FROM DUAL; 
SELECT SEQ_TEMP.CURRVAL FROM DUAL;

-- 5000번 부터 10개씩 증가하는 자동증가수 (시퀀스)
CREATE  SEQUENCE  SEQ_TEMP2;

SELECT SEQ_TEMP2
START WITH 5000 INCREMENT BY 10;
  
INSERT INTO EMP(EMPNO, ENAME) VALUES(SEQ_TEMP2.NEXTVAL,'박씨');
    
--ROWID
select empno, ename, job, rowid from emp;

---------------------------------------------------------------------------------
SELECT INDEX_NAME, INDEX_TYPE
FROM USER_INDEXES
WHERE TABLE_NAME =  'EMPLOYEES';

CREATE INDEX IDX_EMP_SALARY ON EMPLOYEES(SALARY);

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER FROM EMPLOYEES 
WHERE SALARY=3000;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER FROM EMPLOYEES 
WHERE EMPLOYEE_ID = 8000;

delete 